name: Version Update

on:
  pull_request_target:
    paths:
      - requirements.txt
  pull_request:
    paths:
      - requirements.txt

concurrency:
  group: ${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  version-update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Setup Golang
        uses: actions/setup-go@v2
        with:
          go-version: 1.18

      - name: Install Dependencies
        run: |
          go mod tidy -v
          pip install -r requirements.txt
          sudo apt-get update

          # https://grpc.io/docs/protoc-installation/#install-pre-compiled-binaries-any-os
          wget https://github.com/protocolbuffers/protobuf/releases/download/v21.7/protoc-21.7-linux-x86_64.zip
          unzip protoc-21.7-linux-x86_64.zip -d $HOME/.local
          rm protoc-21.7-linux-x86_64.zip

          # https://stackoverflow.com/a/62872353/15683245
          go get -u google.golang.org/protobuf/cmd/protoc-gen-go
          go install google.golang.org/protobuf/cmd/protoc-gen-go
          go get -u google.golang.org/grpc/cmd/protoc-gen-go-grpc
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc

      - name: Get Jina & Docarray Versions
        id: versions
        run: |
          echo "::set-output name=JINA_VERSION::$(jina -v)"
          echo "::set-output name=DOCARRAY_VERSION::$(python -c "import docarray; print(docarray.__version__)")"

      - name: Download proto files
        run: |
          bash scripts/fetchProtos.sh ${{ steps.versions.outputs.JINA_VERSION }} ${{ steps.versions.outputs.DOCARRAY_VERSION }}

      - name: Generate Golang Code from protos
        run: |
          export GOROOT=/usr/local/go
          export GOPATH=$HOME/go
          export GOBIN=$GOPATH/bin
          export PATH="$PATH:$GOROOT:$GOPATH:$GOBIN:$HOME/.local/bin"
          bash scripts/protogen.sh ${{ steps.versions.outputs.JINA_VERSION }} ${{ steps.versions.outputs.DOCARRAY_VERSION }}

      - name: Run Tests
        run: |
          go mod tidy -v
          go install github.com/onsi/ginkgo/v2
          go get github.com/onsi/gomega/...
          sudo apt install golang-ginkgo-dev
          ginkgo --progress -v .

      - name: Commit & Push
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "chore: update protos for jina ${{ steps.versions.outputs.JINA_VERSION }} and docarray ${{ steps.versions.outputs.DOCARRAY_VERSION }}"
          commit_options: "--signoff"
          branch: ${{ github.head_ref }}
          commit_user_name: "Jina Dev Bot"
          commit_user_email: "dev-bot@jina.ai"

      - name: Setup tmate session for debugging
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3
        timeout-minutes: 30
